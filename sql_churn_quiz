advertisers
    id
    name
    city
    state
    business_type
campaigns
    advertiser_id
    campaign_id
    start_date
    duration
    daily_budget



  You would like to determine which advertisers are churning, which means
  leaving the site. First, we define churn as if a user hasn't had an ad
  running for 14 days.

  Write a query to create the following table so that we can export it and
  build a model for predicting churn.

  churn
      advertiser_id
      name
      city
      state
      business_type
      churn
  The first 5 columns are from the advertisers table. The churn column
  has a boolean value of whether or not they have churned. Keep in mind
  that you'll need to use the duration to determine if the ad is still
  running.


CREATE TABLE temp1 (
SELECT id as advertiser_id, name, city, state, business_type,
      CASE WHEN duration < 14 THEN 1 ELSE 0 END as churn
FROM advertisers
JOIN campaigns ON advertisers.id = campaigns.advertiser_id
);







  Say we have another table that has predicted results of churn.

  predicted_churn
      advertiser_id
      churn
  Write a query to calculate each of the following metrics:


SELECT

COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 1 THEN 1 ELSE 0 END) +
  COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 0 THEN 1 ELSE 0 END)
  /
  COUNT(temp1.churn) AS accuracy,

COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 1 THEN 1 ELSE 0 END) /
  (COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 0 THEN 1 ELSE 0 END) +
   COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 1 THEN 1 ELSE 0 END))
   AS precision,

COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 1 THEN 1 ELSE 0 END) /
  (COUNT(CASE WHEN predicted_churn.churn = 0 AND temp1.churn = 1 THEN 1 ELSE 0 END  +
   COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 1 THEN 1 ELSE 0 END))
   AS recall,

COUNT(CASE WHEN predicted_churn.churn = 0 AND temp1.churn = 0 THEN 1 ELSE 0 END) /
  (COUNT(CASE WHEN predicted_churn.churn = 0 AND temp1.churn = 0 THEN 1 ELSE 0 END +
   COUNT(CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 0 THEN 1 ELSE 0 END))



FROM temp1
JOIN predicted_churn ON
    temp1.advertiser_id = predicted_churn.advertiser_id;



  '''
  accuracy - TP+TN / P + N
  precision - TP / TP + FP
  recall (aka sensitivity) - TP / TP + FN
  specificity - TN / FP + TN




  TP = CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 1 THEN 1 ELSE 0 END
  TN = CASE WHEN predicted_churn.churn = 0 AND temp1.churn = 0 THEN 1 ELSE 0 END
  FP = CASE WHEN predicted_churn.churn = 1 AND temp1.churn = 0 THEN 1 ELSE 0 END
  FN = CASE WHEN predicted_churn.churn = 0 AND temp1.churn = 1 THEN 1 ELSE 0 END
  '''
